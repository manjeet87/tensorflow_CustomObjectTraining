To initiate labelImg application, execute the following command in labelImg folder:
python labelImg.py

Mark boxes and save for each image file separately, that will generate corresponding .xml file for every image.

Converting xml data to CSV, after setting correct paths inside xml_to_csv.py file:
python xml_to_csv.py

In order to generate tfrecords data for training/test CSV-label data, execute:
for training dataset:
python generate_tfrecord.py --csv_input=data/train_labels.csv  --output_path=data/train.record

for test dataset:
python generate_tfrecord.py --csv_input=data/test_labels.csv  --output_path=data/test.record


In order the initiate the training, execute the following command in root or  object_detection diectory:
python train.py --logtostderr --train_dir=training1/  --pipeline_config_path=training1/ssd_mobilenet_v1_coco.config


In order to see the training Log, type following in root directory:
tensorboard --logdir=training/


After training model execute the following specifying correct paths:

python export_inference_graph \
    --input_type image_tensor \
    --pipeline_config_path path/to/ssd_inception_v2.config \
    --trained_checkpoint_prefix path/to/model.ckpt \
    --output_directory path/to/exported_model_directory

python export_inference_graph.py \   --input_type image_tensor \    --pipeline_config_path training/ssd_mobilenet_v1_coco.config \  --trained_checkpoint_prefix training/mod
el.ckpt-227 \    --output_directory buddha_graph